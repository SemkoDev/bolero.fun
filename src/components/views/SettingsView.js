import React, { Component } from 'react';
import { Form, Segment, Container, Header, Message } from 'semantic-ui-react'
import { isAddress, isTrytes } from 'iota.lib.js/lib/utils/inputValidator';
import { isValidChecksum } from 'iota.lib.js/lib/utils/utils';

export default class SettingsView extends Component {
  componentWillMount () {
    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
    this.setState(Object.assign({
      sent: false,
      error: null
    }, this.props.settings))
  }

  render() {
    const { name, address, seed, sent, saving, error } = this.state;
    const sentMessage = sent && !saving && !error
      ? (
        <Message
          color='green'
          icon='like outline'
          header='Done!'
          content='The settings have been saved to <your home directory>/.bolero/settings.json. IRI, Nelson and Field are automatically restarted for the settings to take effect.'
        />
      )
      : error
        ? (
          <Message
            color='red'
            icon='warning sign'
            header='Please check your input!'
            content={error}
          />
        )
        : null;

    return (
      <Container>
        <Segment basic>
          <Segment>
            <Header as='h3'>CarrIOTA Settings</Header>
            <Form onSubmit={this.handleSubmit} loading={this.props.saving}>
              <Message
                color='blue'
                icon='idea'
                header='Your node name'
                content='This will be your identifier shown on field.carriota.com. This identifier will also be used for the Nelson network.'
              />
              <Form.Input label='Your Node Name' placeholder='Name' name='name' value={name} onChange={this.handleChange} />

              <Message
                color='blue'
                icon='idea'
                header='Your Address or Seed'
                content='If you want to participate in donations distributions for the work done by your node, you can add an address or a seed here. If you use a seed a new address will be generated once you transfer from the old one. ONLY ADDRESSES WITH A CHECKSUM (90 CHARACTERS) ARE ALLOWED. THOSE ARE GENERATED BY DEFAULT IN YOUR IOTA WALLET. IF YOU WANT TO USE A SEED, PLEASE GENERATE A NEW ONE! DO NOT USE YOUR "DEFAULT" SEED!'
              />
              <Form.Input label='IOTA Address' placeholder='IOTA Address' name='address' value={address} onChange={this.handleChange} />
              <Form.Input label='IOTA Seed' placeholder='IOTA Seed' name='seed' value={seed} onChange={this.handleChange} />
              {sentMessage}
              <Form.Button content='Submit' />
            </Form>
          </Segment>
        </Segment>
      </Container>
    )
  }

  handleChange (e, { name, value }) {
    this.setState({ [name]: value })
  }

  handleSubmit () {
    const { name, address, seed } = this.state;
    let error = null;

    if (address.length && seed.length) {
      error = 'Please enter either an IOTA Address or a Seed!'
    } else if (address.length && (!isAddress(address) || !isValidChecksum(address))) {
      error = 'The provided IOTA Address seems to be wrong!'
    } else if (seed.length && !isTrytes(seed, 81)) {
      error = 'The provided IOTA Seed seems to be wrong!'
    }

    if (!error) {
      this.props.updateSettings({ name, address, seed });
    }

    this.setState({ sent: true, error });
  };
}